<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.msb.mapper.EmpMapper2">

    <!-- sql语句就是在上面定义一些公共的字段或者语句，下面用的时候直接引用 -->
    <sql id="empColumn">empno,ename,job,mgr,hiredate,sal,comm,deptno</sql>   <!-- sql 标签 -->
    <sql id="baseSelect">select <include refid="empColumn"></include>from emp</sql>

    <!-- List<Emp> findByCondition(Emp emp); -->
    <select id="findByCondition" resultType="com.msb.pojo.Emp">
        <include refid="baseSelect"></include>   <!-- sql标签的使用 -->
        <where>
            <!-- 动态SQL if语句 -->
            <if test="empno != null">
                and empno = #{empno}
            </if>
            <if test="ename != null and ename != ''">       <!-- ename为String类型，需要额外判断空字符‘ ’ -->
                <bind name="likePattern" value="'%'+ename+'%'"/>
                and ename like #{likePattern}       <!-- bind模糊查询 -->
            </if>
            <if test="job != null and job != ''">           <!-- job为String类型，需要额外判断空字符‘ ’ -->
                and job = #{job}
            </if>
            <if test="mgr != null">
                and mgr = #{mgr}
            </if>
            <if test="hiredate != null">
                and hiredate = #{hiredate}
            </if>
            <if test="sal != null">
                and sal = #{sal}
            </if>
            <if test="comm != null">
                and comm = #{comm}
            </if>
            <if test="deptno != null">
                and deptno = #{deptno}
            </if>
        </where>

    </select>


<!-- choose和when 标签-->
    <!--
    choose 和 when
    choose 只拼接第一个成立的when里的条件，即使后边的条件也成立，但是不会拼接！
    -->
    <select id="findByCondition2" resultType="com.msb.pojo.Emp">
        select * from emp
        <where>
            <choose>
                <when test="empno != null">
                    and empno = #{empno}
                </when>
                <when test="ename != null and ename != ''">       <!-- ename为String类型，需要额外判断空字符‘ ’ -->
                    and ename like concat('%',#{ename},'%')     <!-- 模糊查询 -->
                </when>
                <when test="job != null and job != ''">           <!-- job为String类型，需要额外判断空字符‘ ’ -->
                    and job = #{job}
                </when>
                <when test="mgr != null">
                    and mgr = #{mgr}
                </when>
                <when test="hiredate != null">
                    and hiredate = #{hiredate}
                </when>
                <when test="sal != null">
                    and sal = #{sal}
                </when>
                <when test="comm != null">
                    and comm = #{comm}
                </when>
                <when test="deptno != null">
                    and deptno = #{deptno}
                </when>
            </choose>

        </where>
    </select>


<!-- set标签 -->
    <!-- int uodateEmpByCondition(Emp emp);-->
    <update id="uodateEmpByCondition">
        update emp
        <set>           <!-- set 标签会自动去掉第一个条件的逗号 -->
            <if test="ename != null and ename != ''">       <!-- ename为String类型，需要额外判断空字符‘ ’ -->
                , ename = #{ename}
            </if>
            <if test="job != null and job != ''">           <!-- job为String类型，需要额外判断空字符‘ ’ -->
                , job = #{job}
            </if>
            <if test="mgr != null">
                , mgr = #{mgr}
            </if>
            <if test="hiredate != null">
                , hiredate = #{hiredate}
            </if>
            <if test="sal != null">
                , sal = #{sal}
            </if>
            <if test="comm != null">
                , comm = #{comm}
            </if>
            <if test="deptno != null">
                , deptno = #{deptno}
            </if>
        </set>
        where empno = #{empno}
    </update>


<!-- trim 标签-->
    <!-- int uodateEmpByCondition2(Emp emp); -->
    <update id="uodateEmpByCondition2">
        update emp
        <!-- <trim> 标签
             prefix   要动态添加的前缀
             prefixOverrides   要去掉的前缀
             suffix   要动态添加的后缀
             suffixOverrides   要去掉的后缀

             <trim prefix="set" prefixOverrides="," suffix="" suffixOverrides="">
        -->
        <trim prefix="set" prefixOverrides="," suffix="" suffixOverrides="">
            <if test="ename != null and ename != ''">       <!-- ename为String类型，需要额外判断空字符‘ ’ -->
                , ename = #{ename}
            </if>
            <if test="job != null and job != ''">           <!-- job为String类型，需要额外判断空字符‘ ’ -->
                , job = #{job}
            </if>
            <if test="mgr != null">
                , mgr = #{mgr}
            </if>
            <if test="hiredate != null">
                , hiredate = #{hiredate}
            </if>
            <if test="sal != null">
                , sal = #{sal}
            </if>
            <if test="comm != null">
                , comm = #{comm}
            </if>
            <if test="deptno != null">
                , deptno = #{deptno}
            </if>
        </trim>
        where empno = #{empno}
    </update>
</mapper>